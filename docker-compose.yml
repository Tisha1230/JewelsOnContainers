version: '3.4'

networks:
  frontend:
  backend:


services:
  catalog:
    image: jewels/catalogapi
    build:
      context: .\ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseServer: mssqlserver
      DatabaseName: CatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalCatalogUrl: http://localhost:7000
    ports:
      - "7000:80"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  cart:
    image: jewels/cartapi
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: basket.data
      IdentityUrl: http://192.168.1.23:7800
    ports:
      - "7010:80"
    container_name: jewelscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data

  webmvc:
    image: jewels/webmvc
    build: 
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalog
      IdentityUrl: http://192.168.1.23:7800
      CallBackUrl: http://localhost:7500
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_51JWbbKDzDKEHkvGhL3u5VnDJvvPsrUWkQnB8pVd3YGE3Qsm2pJ04O2TPTGbE3ylPJzzkbk5IctwjCHs1MXujhFnT00VzBjwZjx
      StripePrivateKey: sk_test_51JWbbKDzDKEHkvGh9T8jb4tMGrIPBuj5Vu7cZO7HhJNDrjDlQtW3txWE0u3mV683OzuyLNBBamkId2IQ6Sf9yaPG00akR1olaC
    ports:
      - "7500:80"
    container_name: webshop
    networks: 
      - frontend
    depends_on:
      - catalog
      - tokenserver
      - cart
      - order

  order:
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    image: jewels/orderapi
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.1.23:7800
      DatabaseServer: mssqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "7020:80"
    container_name: orderapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: jewels/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:7500
    ports:
      - "7800:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: "Y" 
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1448:1433"
    container_name: jewlssqlserver
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1449:1433"
    container_name: jewelstokensqlserver
    networks:
      - backend

  basket.data:
    image: redis
    ports: 
      - "7050:6379"
    container_name: basketdata
    networks:
      - backend
     
  